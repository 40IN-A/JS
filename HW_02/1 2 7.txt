1. Почему код дает именно такие результаты?

var a = 1, b = 1, c, d;
c = ++a; alert(c);           // 2 В префиксной форме сначала происходит инкрементирование, а возврат — уже с обновленным значением.
d = b++; alert(d);           // 1 В постфиксной форме сначала происходит возвращение значения, а потом выполняется инкрементирование.
c = (2+ ++a); alert(c);      // 5 После первой операции а = 2, т.к. инкрементирование происходит в префиксной форме, то получается с = 2 + 3
d = (2+ b++); alert(d);      // 4 После первой операции b = 2, т.к. инкрементирование происходит в постпрефиксной форме, то получается d = 2 + 2
alert(a);                    // 3 После второй операции а = 3
alert(b);                    // 3 После второй операции b = 3

2. Чему будет равен x? 
var a = 2;
var x = 1 + (a *= 2);
х = 1 + (а *= 2) = 1 + (2 * 2) = 5
х = 5

7. Сравнить null и 0. Объяснить результат.

alert( null > 0 );  // (1) false
alert( null == 0 ); // (2) false
alert( null >= 0 ); // (3) true

Нестрогие равенства и сравнения > < >= <= работают по-разному. 
Сравнения преобразуют null в число, рассматривая его как 0. 
Поэтому выражение (3) null >= 0 истинно, а (1) null > 0 ложно.

Для нестрогого равенства == значений undefined и null действует особое правило: эти значения ни к чему не приводятся, 
они равны друг другу и не равны ничему другому. Поэтому (2) null == 0 ложно.


